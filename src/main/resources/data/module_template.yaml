OdooBasicModule:
  __moduleName__:
    __init__.py: |
      # -*- coding: utf-8 -*-
      
      from . import models

    __manifest__.py: |
      # -*- coding: utf-8 -*-
      {
          'name': '__formalModuleName__',
          'version': '1.0',
          'summary': 'Brief description of the module',
          'description': '''
              Detailed description of the module
          ''',
          'category': 'Uncategorized',
          'author': 'Cybrosys Techno Solutions',
          'company': 'Cybrosys Techno Solutions',
          'maintainer': 'Cybrosys Techno Solutions',
          'website': 'https://www.cybrosys.com',
          'depends': ['base', 'mail'],
          'data': [
              'security/ir.model.access.csv',
              'views/__modelName___views.xml',
          ],
          'license': 'LGPL-3',
          'installable': True,
          'application': False,
          'auto_install': False,
      }

    models:
      __init__.py: |
        # -*- coding: utf-8 -*-
        
        from . import __modelName__

      __modelName__.py: |
        # -*- coding: utf-8 -*-
        
        from odoo import api, fields, models, _
        
        class __modelClassName__(models.Model):
            _name = '__modelTechnicalName__'
            _description = 'Sample Model'
            _inherit = ['mail.thread', 'mail.activity.mixin']
            
            name = fields.Char(string='Name', required=True)
            description = fields.Text(string='Description')
            age = fields.Integer(string='Age')
            date = fields.Date(string='Date')
            active = fields.Boolean(string='Active', default=True)
            priority = fields.Selection([
                ('0', 'Low'),
                ('1', 'Medium'),
                ('2', 'High'),
                ('3', 'Highest')
            ], string='Priority', default='1')
            state = fields.Selection([
                ('draft', 'Draft'),
                ('confirmed', 'Confirmed'),
                ('done', 'Done')
            ], string='Status', default='draft', tracking=True)
        
            img = fields.Image(string="Image")
            
            def button_action(self):
                pass
            
            @api.model_create_multi
            def create(self, vals):
                """Create records using provided values."""
                res = super().create(vals)
                return res
            
            def write(self, vals):
                """Write records using provided values."""
                res = super().write(vals)
                return res
            
            def unlink(self):
                """Delete records"""
                return super().unlink()

    views:
      __modelName___views.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <!-- Sample form view -->
            <record id="__modelName___form_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.form</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <form string="Sample">
                        <header>
                            <button name="button_action" string="Submit" type="object" class="btn-primary"/>
                            <field name="state" widget="statusbar" options="{'clickable': '1'}"/>
                        </header>
                        <sheet>
                            <h1>
                                <field name="name"/>
                            </h1>
                            <field name="img" widget="image" class="oe_avatar"/>
                            <group>
                                <field name="age"/>
                                <field name="priority" widget="priority"/>
                            </group>
                            <group>
                                <field name="active"/>
                            </group>
                            <notebook>
                                <page string="Details">
                                    <field name="description"/>
                                </page>
                            </notebook>
                        </sheet>
                        <chatter/>
                    </form>
                </field>
            </record>

            <!-- Sample list view -->
            <record id="__modelName___list_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.list</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <list string="Samples">
                        <field name="name"/>
                        <field name="age"/>
                        <field name="priority"/>
                        <field name="state"/>
                    </list>
                </field>
            </record>

            <!-- Kanban View -->
            <record id="__modelName___kanban_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.kanban</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <kanban>
                        <field name="state"/>
                        <templates>
                            <t t-name="kanban-box">
                                <div class="oe_kanban_global_click">
                                    <field name="name"/>
                                    <div><field name="priority"/></div>
                                    <div><field name="age"/></div>
                                </div>
                            </t>
                        </templates>
                    </kanban>
                </field>
            </record>

            <!-- Search View -->
            <record id="__modelName___search_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.search</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <search>
                        <field name="name"/>
                        <filter string="Draft" name="filter_draft" domain="[('state','=','draft')]"/>
                        <filter string="Confirmed" name="filter_confirmed" domain="[('state','=','confirmed')]"/>
                        <filter string="Done" name="filter_done" domain="[('state','=','done')]"/>
                    </search>
                </field>
            </record>
            <!-- Action -->
            <record id="action___modelName__" model="ir.actions.act_window">
                <field name="name">Samples</field>
                <field name="res_model">__modelTechnicalName__</field>
                <field name="view_mode">list,form,kanban</field>
            </record>

            <!-- Menus -->
            <menuitem name="__formalModuleName__"
                      id="__moduleName___root"/>

            <menuitem name="Samples"
                      id="menu___modelName__"
                      parent="__moduleName___root"
                      action="action___modelName__"/>
        </odoo>
    security:
      ir.model.access.csv: |
        id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
        access___modelName___user,access.__modelTechnicalName__.user,model___modelName__,base.group_user,1,1,1,1
OdooAdvanceModule:
  __moduleName__:
    __init__.py: |
      # -*- coding: utf-8 -*-
      
      from . import models

    __manifest__.py: |
      # -*- coding: utf-8 -*-
      {
          'name': '__formalModuleName__',
          'version': '1.0',
          'summary': 'Brief description of the module',
          'description': '''
              Detailed description of the module
          ''',
          'category': 'Uncategorized',
          'author': 'Cybrosys Techno Solutions',
          'company': 'Cybrosys Techno Solutions',
          'maintainer': 'Cybrosys Techno Solutions',
          'website': 'https://www.cybrosys.com',
          'depends': ['base', 'mail', 'web', 'calendar'],
          'data': [
              'data/ir_sequence_data.xml',
              'data/ir_cron_data.xml',
              'security/ir.model.access.csv',
              'views/__modelName___views.xml',
              'views/templates.xml',
          ],
          "demo": [
            "demo/__modelName___data.xml"
          ],
          'license': 'LGPL-3',
          'installable': True,
          'application': False,
          'auto_install': False,
      }

    models:
      __init__.py: |
        # -*- coding: utf-8 -*-
        
        from . import __modelName__

      __modelName__.py: |
        # -*- coding: utf-8 -*-
        from odoo import api, fields, models, _

        class __modelClassName__(models.Model):
            _name = '__modelTechnicalName__'
            _description = 'Sample Model'
            _inherit = ['mail.thread', 'mail.activity.mixin']

            name = fields.Char(string='Name', required=True, default="New")
            description = fields.Text(string='Description')
            age = fields.Integer(string='Age')
            date = fields.Date(string='Date')
            active = fields.Boolean(string='Active', default=True)
            priority = fields.Selection([
                ('0', 'Low'),
                ('1', 'Medium'),
                ('2', 'High'),
                ('3', 'Highest')
            ], string='Priority', default='1')
            state = fields.Selection([
                ('draft', 'Draft'),
                ('confirmed', 'Confirmed'),
                ('done', 'Done')
            ], string='Status', default='draft', tracking=True)
            img = fields.Image(string="Image")

            def button_action(self):
                pass

            @api.model_create_multi
            def create(self, vals):
                """Create records using provided values."""
                res = super().create(vals)
                return res
        
            def write(self, vals):
                """Write records using provided values."""
                res = super().write(vals)
                return res
        
            def unlink(self):
                """Delete records"""
                return super().unlink()

    views:
      __modelName___views.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <!-- form view -->
            <record id="__moduleName___form_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.form</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <form string="Sample">
                        <header>
                            <button name="button_action" string="Submit" type="object" class="btn-primary"/>
                            <field name="state" widget="statusbar" options="{'clickable': '1'}"/>
                        </header>
                        <sheet>
                            <h1>
                                <field name="name"/>
                            </h1>
                                <field name="img" widget="image" class="oe_avatar"/>
                            <group>
                                <field name="age"/>
                                <field name="priority" widget="priority"/>
                            </group>
                            <group>
                                <field name="active"/>
                            </group>
                            <notebook>
                                <page string="Details">
                                    <field name="description"/>
                                </page>
                            </notebook>
                        </sheet>
                      <chatter/>
                    </form>
                </field>
            </record>
            
            <!-- Sample list view -->
            <record id="__modelName___list_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.list</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <list string="Samples">
                        <field name="name"/>
                        <field name="age"/>
                        <field name="priority"/>
                        <field name="state"/>
                    </list>
                </field>
            </record>
    
            <!-- Kanban View -->
            <record id="__modelName___kanban_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.kanban</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <kanban>
                        <field name="state"/>
                        <templates>
                            <t t-name="kanban-box">
                                <div class="oe_kanban_global_click">
                                    <field name="name"/>
                                    <div><field name="priority"/></div>
                                    <div><field name="age"/></div>
                                </div>
                            </t>
                        </templates>
                    </kanban>
                </field>
            </record>
    
            <!-- Search View -->
            <record id="__modelName___search_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.search</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <search>
                        <field name="name"/>
                        <filter string="Draft" name="filter_draft" domain="[('state','=','draft')]"/>
                        <filter string="Confirmed" name="filter_confirmed" domain="[('state','=','confirmed')]"/>
                        <filter string="Done" name="filter_done" domain="[('state','=','done')]"/>
                    </search>
                </field>
            </record>
            
             <!-- Calendar view -->
            <record id="__modelName___calendar_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.calendar</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <calendar string="__formalModuleName__ Calendar" date_start="date" date_stop="date">
                        <field name="name"/>
                        <field name="state"/>
                    </calendar>
                </field>
            </record>

            <!-- Pivot view -->
            <record id="__modelName___pivot_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.pivot</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <pivot string="__formalModuleName__ Pivot">
                        <field name="name"/>
                        <field name="state"/>
                    </pivot>
                </field>
            </record>

            <record id="action___modelName__" model="ir.actions.act_window">
                <field name="name">Samples</field>
                <field name="res_model">__modelTechnicalName__</field>
                <field name="view_mode">list,form,kanban,calendar,pivot</field>
            </record>
    
            <!-- Menus -->
            <menuitem name="__formalModuleName__"
                      id="__moduleName___root"/>
    
            <menuitem name="Samples"
                      id="menu___modelName__"
                      parent="__moduleName___root"
                      action="action___modelName__"/>
        </odoo>

      templates.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <template id="__moduleName__.layout_template">
                <div class="oe_structure">
                    <section class="container">
                        <div class="row">
                            <div class="col-lg-12">
                                <h1>Sample Template</h1>
                                <p>This is a sample template for the __moduleName__ module.</p>
                            </div>
                        </div>
                    </section>
                </div>
            </template>
        </odoo>

    data:
      ir_sequence_data.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <data noupdate="1">
                <record id="__moduleName___sequence" model="ir.sequence">
                    <field name="name">__formalModuleName__ Sequence</field>
                    <field name="code">__modelTechnicalName__</field>
                    <field name="prefix">SAMPLE-</field>
                    <field name="padding">5</field>
                    <field name="number_next">1</field>
                    <field name="implementation">no_gap</field>
                </record>
            </data>
        </odoo>

      ir_cron_data.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <data noupdate="1">
                <record id="__moduleName___scheduler" model="ir.cron">
                    <field name="name">__formalModuleName__ Scheduler</field>
                    <field name="model_id" ref="model___modelName__"/>
                    <field name="state">code</field>
                    <field name="code">model.run_scheduler()</field>
                    <field name="interval_type">days</field>
                    <field name="interval_number">1</field>
                </record>
            </data>
        </odoo>
    demo:
      __modelName___data.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <data noupdate="1">
                <record id="__modelName___demo_data_1" model="__modelTechnicalName__">
                    <field name="name">person1</field>
                    <field name="description">Demo Description</field>
                    <field name="age">20</field>
                </record>
                <record id="__modelName___demo_data_2" model="__modelTechnicalName__">
                    <field name="name">person2</field>
                    <field name="description">Demo Description</field>
                    <field name="age">30</field>
                </record>
                <record id="__modelName___demo_data_3" model="__modelTechnicalName__">
                    <field name="name">person3</field>
                    <field name="description">Demo Description</field>
                    <field name="age">40</field>
                </record>
            </data>
        </odoo>
    security:
      ir.model.access.csv: |
        id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
        access___modelName___user,access.__modelTechnicalName__.user,model___modelName__,base.group_user,1,1,1,1

    static:
      description: { }
      src:
        js: { }
        css: { }
        xml: { }
WebsiteThemeModule:
  __moduleName__:
    __init__.py: |
      # -*- coding: utf-8 -*-

    __manifest__.py: |
      # -*- coding: utf-8 -*-
      {
          'name': '__formalModuleName__',
          'version': '1.0',
          'summary': 'Brief description of the module',
          'description': '''
              Detailed description of the module
          ''',
          'category': 'Theme',
          'author': 'Cybrosys Techno Solutions',
          'company': 'Cybrosys Techno Solutions',
          'maintainer': 'Cybrosys Techno Solutions',
          'website': 'https://www.cybrosys.com',
          'depends': ['website'],
          'data': [
              'views/header_template.xml',
              'views/layout_templates.xml',
              'views/footer_template.xml',
          ],
          'application': False,
          'auto_install': False,
          'license': 'LGPL-3',
      }
      
    static:
      description: {}
      src: {}
    views:
      header_template.xml: |
        <?xml version="1.0" encoding="UTF-8"?>
        <odoo>
            <template id="__moduleName___header" inherit_id="website.layout" name="__formalModuleName__ Header">
                <xpath expr="//header" position="replace">
                    <header class="py-3 bg-light">
                        <div class="container">
                            <div class="row align-items-center">
                                <div class="col-12 col-md-4 text-md-start text-center mb-2 mb-md-0">
                                    <h1 class="h3 m-0 fw-bold">__formalModuleName__</h1>
                                </div>
                                <div class="col-12 col-md-4 text-center mb-2 mb-md-0">
                                    <ul class="nav justify-content-center">
                                        <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
                                        <li class="nav-item"><a class="nav-link" href="/aboutus">About</a></li>
                                        <li class="nav-item"><a class="nav-link" href="/contactus">Contact</a></li>
                                    </ul>
                                </div>
                                <div class="col-12 col-md-4 text-end d-none d-md-block"/>
                            </div>
                        </div>
                    </header>
                </xpath>
            </template>
        </odoo>
      layout_templates.xml: |
        <?xml version="1.0" encoding="UTF-8"?>
        <odoo>
            <template id="__moduleName___homepage" inherit_id="website.homepage">
                <xpath expr="//*[@id='wrap']" position="replace">
                    <div id="wrap" class="oe_structure">
                        <section class="d-flex align-items-center justify-content-center" style="min-height: 50vh;">
                            <div class="container">
                                <div class="row justify-content-center text-center">
                                    <div class="col-lg-8">
                                        <h2 class="display-3 mb-4">Welcome to <b>Homepage</b>!</h2>
                                        <p class="lead">Start building your theme</p>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </xpath>
            </template>
        </odoo>
      footer_template.xml: |
        <?xml version="1.0" encoding="UTF-8"?>
        <odoo>
            <template id="__moduleName___footer" inherit_id="web.frontend_layout">
                <xpath expr="//footer[@id='bottom']" position="replace">
                    <footer id="bottom" class="bg-dark text-white o_footer_custom">
                        <div class="container py-4">
                            <div class="row">
                                <div class="col-md-6">
                                    <h5>Custom Footer Title</h5>
                                    <p>Your custom footer content goes here.</p>
                                </div>
                                <div class="col-md-6 text-end">
                                    <p> <span t-field="res_company.name"/> - All rights reserved.</p>
                                </div>
                            </div>
                        </div>
                    </footer>
                </xpath>
            </template>
        </odoo>
OwlBasicModule:
  __moduleName__:
    __init__.py: |
      # -*- coding: utf-8 -*-
      
      from . import models

    __manifest__.py: |
      # -*- coding: utf-8 -*-
      {
        "name": "__formalModuleName__",
        "version": "18.0.1.0.0",
        "category": "Tools",
        'summary': 'Brief description of the module',
        'description': '''
            Detailed description of the module
        ''',
        'author': 'Cybrosys Techno Solutions',
        'company': 'Cybrosys Techno Solutions',
        'maintainer': 'Cybrosys Techno Solutions',
        'website': 'https://www.cybrosys.com',
        "depends": ["base", "mail"],
        "data": [
            "security/ir.model.access.csv",
            "data/ir_sequence_data.xml",
            "data/ir_cron_data.xml",
            "views/__modelName___views.xml"
        ],
        "demo": [
            "demo/__modelName___data.xml"
        ],
        "assets": {
            'web.assets_backend': [
                '__moduleName__/static/src/js/client_action.js',
                '__moduleName__/static/src/xml/client_action.xml',
            ]
        },
        "license": "LGPL-3",
        "installable": True,
        "auto_install": False,
        "application": True
      }
    data:
      ir_cron_data.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <data noupdate="1">
                <record id="__modelName___scheduler" model="ir.cron">
                    <field name="name">__formalModuleName__ Scheduler</field>
                    <field name="model_id" ref="model___modelName__"/>
                    <field name="state">code</field>
                    <field name="code">model.run_scheduler()</field>
                    <field name="interval_type">days</field>
                    <field name="interval_number">1</field>
                </record>
            </data>
        </odoo>
      ir_sequence_data.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <data noupdate="1">
                <record id="__modelName___sequence" model="ir.sequence">
                    <field name="name">__modelName__ Sequence</field>
                    <field name="code">__modelTechnicalName__</field>
                    <field name="prefix">SAMPLE-</field>
                    <field name="padding">5</field>
                    <field name="number_next">1</field>
                    <field name="implementation">no_gap</field>
                </record>
            </data>
        </odoo>
    demo:
      __modelName___data.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <data noupdate="1">
                <record id="__modelName___demo_data_1" model="__modelTechnicalName__">
                    <field name="name">person1</field>
                    <field name="description">Demo Description</field>
                    <field name="age">20</field>
                </record>
                <record id="__modelName___demo_data_2" model="__modelTechnicalName__">
                    <field name="name">person2</field>
                    <field name="description">Demo Description</field>
                    <field name="age">30</field>
                </record>
                <record id="__modelName___demo_data_3" model="__modelTechnicalName__">
                    <field name="name">person3</field>
                    <field name="description">Demo Description</field>
                    <field name="age">40</field>
                </record>
            </data>
        </odoo>
    models:
      __init__.py: |
        # -*- coding: utf-8 -*-
        
        from . import __modelName__

      __modelName__.py: |
        # -*- coding: utf-8 -*-
        
        from odoo  import api, fields, models, _
        
        class __modelClassName__(models.Model):
            _name = '__modelTechnicalName__'
            _description = 'Sample Model'
            _inherit = ['mail.thread', 'mail.activity.mixin']
        
            name = fields.Char(string='Name', required=True)
            description = fields.Text(string='Description')
            age = fields.Integer(string='Age')
            date = fields.Date(string='Date')
            active = fields.Boolean(string='Active', default=True)
            priority = fields.Selection([
                ('0', 'Low'),
                ('1', 'Medium'),
                ('2', 'High'),
                ('3', 'Highest')
            ], string='Priority', default='1')
            state = fields.Selection([
                ('draft', 'Draft'),
                ('confirmed', 'Confirmed'),
                ('done', 'Done')
            ], string='Status', default='draft', tracking=True)
            img = fields.Image(string="Image")
        
            def button_action(self):
                pass
        
            @api.model_create_multi
            def create(self, vals):
                """Create records using provided values."""
                res = super().create(vals)
                return res
        
            def write(self, vals):
                """Write records using provided values."""
                res = super().write(vals)
                return res
        
            def unlink(self):
                """Delete records"""
                return super().unlink()
        
            def run_scheduler(self):
              for record in self:
                #your cron logic
                print(record)
    views:
      __modelName___views.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <!-- Sample form view -->
            <record id="__modelName___views_form" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.form</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <form string="Sample">
                        <header>
                            <button name="button_action" string="Submit" type="object" class="btn-primary"/>
                            <field name="state" widget="statusbar" options="{'clickable': '1'}"/>
                        </header>
                        <sheet>
                            <h1>
                                <field name="name"/>
                            </h1>
                            <field name="img" widget="image" class="oe_avatar"/>
                            <group>
                                <field name="age"/>
                                <field name="priority" widget="priority"/>
                            </group>
                            <group>
                                <field name="active"/>
                            </group>
                            <notebook>
                                <page string="Details">
                                    <field name="description"/>
                                </page>
                            </notebook>
                        </sheet>
                        <chatter/>
                    </form>
                </field>
            </record>
            <!-- Sample list view -->
            <record id="__modelName___list" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.list</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <list string="Samples">
                        <field name="name"/>
                        <field name="age"/>
                        <field name="priority"/>
                        <field name="state"/>
                    </list>
                </field>
            </record>
            <!-- Kanban View -->
            <record id="__modelName__kanban" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.kanban</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <kanban>
                        <field name="state"/>
                        <templates>
                            <t t-name="kanban-box">
                                <div class="oe_kanban_global_click">
                                    <field name="name"/>
                                    <div><field name="priority"/></div>
                                    <div><field name="age"/></div>
                                </div>
                            </t>
                        </templates>
                    </kanban>
                </field>
            </record>
             <!-- Calendar view -->
            <record id="__modelName___calendar_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.calendar</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <calendar string="__formalModuleName__ Calendar" date_start="date" date_stop="date">
                        <field name="name"/>
                        <field name="state"/>
                    </calendar>
                </field>
            </record>

            <!-- Pivot view -->
            <record id="__modelName___pivot_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.pivot</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <pivot string="__formalModuleName__ Pivot">
                        <field name="name"/>
                        <field name="state"/>
                    </pivot>
                </field>
            </record>
            <!-- Search View -->
            <record id="__modelName___search" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.search</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <search>
                        <field name="name"/>
                        <filter string="Draft" name="filter_draft" domain="[('state','=','draft')]"/>
                        <filter string="Confirmed" name="filter_confirmed" domain="[('state','=','confirmed')]"/>
                        <filter string="Done" name="filter_done" domain="[('state','=','done')]"/>
                    </search>
                </field>
            </record>
            <!-- Action -->
            <record id="action___modelName__" model="ir.actions.act_window">
                <field name="name">Samples</field>
                <field name="res_model">__modelTechnicalName__</field>
                <field name="view_mode">list,form,kanban,calendar,pivot</field>
            </record>
            <record id="ir_actions_client" model="ir.actions.client">
                <field name="name">Client Action</field>
                <field name="tag">__modelName__.__modelName__</field>
            </record>
    
            <menuitem id="menu___moduleName___root" name="__formalModuleName__" action="ir_actions_client"/>
    
            <!-- Menu -->
            <menuitem id="menu___moduleName___root" name="__formalModuleName__"/>
            <menuitem id="menu___moduleName___main" name="Records" parent="menu___moduleName___root" action="action___modelName__"/>
        </odoo>
    static:
      src:
        js:
          client_action.js: |
            /** @odoo-module */
            import { registry } from '@web/core/registry';
            import { Component, WillStart } from "@odoo/owl";
            import { useService } from "@web/core/utils/hooks";
            
            export class __modelClassName__ extends Component {
            setup() {
                }
            }
            __modelClassName__.template = "__modelName__.__modelClassName__";
            registry.category("actions").add("__modelName__.__modelName__", __modelClassName__);
        xml:
          client_action.xml: |
            <?xml version="1.0" encoding="UTF-8"?>
            <templates xml:space="preserve">
                <t t-name="__modelName__.__modelClassName__">
                    <div class="container mt-2">
                        <h1 class="text-center text-bold text-primary">Welcome Screen</h1>
                    </div>
                </t>
            </templates>
    security:
      ir.model.access.csv: |
        id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
        access___modelName___user,access.__modelTechnicalName__.user,model___modelName__,base.group_user,1,1,1,1
OwlAdvanceModule:
  __moduleName__:
    __init__.py: |
      # -*- coding: utf-8 -*-

      from . import models
      from . import controllers

    __manifest__.py: |
      # -*- coding: utf-8 -*-
      {
        "name": "__formalModuleName__",
        "version": "18.0.1.0.0",
        "category": "Tools",
        'summary': 'Brief description of the module',
        'description': '''
            Detailed description of the module
        ''',
        'author': 'Cybrosys Techno Solutions',
        'company': 'Cybrosys Techno Solutions',
        'maintainer': 'Cybrosys Techno Solutions',
        'website': 'https://www.cybrosys.com',
        "depends": ["base", "mail"],
        "data": [
            "security/ir.model.access.csv",
            "data/ir_sequence_data.xml",
            "data/ir_cron_data.xml",
            "views/__modelName___views.xml"
        ],
        "demo": [
            "demo/__modelName___data.xml"
        ],
        "assets": {
            'web.assets_backend': [
                '__moduleName__/static/src/js/client_action.js',
                '__moduleName__/static/src/xml/client_action.xml',
                'https://www.gstatic.com/charts/loader.js',
            ]
        },
        "license": "LGPL-3",
        "installable": True,
        "auto_install": False,
        "application": True
      }
    controllers:
      __init__.py: |
        # -*- coding: utf-8 -*-
        
        from . import main
      main.py: |
        # -*- coding: utf-8 -*-
        
        from odoo.http import Controller, route, request


        class OwlDashboard(Controller):
          
            @route('/apply/filter', type='json', auth='public', csrf=False)
            def apply_filter(self, date):
                domain = [('date', '=', date)] if date else []
                partner_data = request.env['__modelTechnicalName__'].read_group(
                domain=domain,
                fields=['amount'],
                groupby=['partner_id'],
                lazy=False,
                )
                result = [{
                'partner': data['partner_id'][1],
                'total_records': data['__count'],
                'total_amount': data['amount'],
                } for data in partner_data]
                return result

    data:
      ir_cron_data.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <data noupdate="1">
                <record id="__modelName___scheduler" model="ir.cron">
                    <field name="name">__formalModuleName__ Scheduler</field>
                    <field name="model_id" ref="model___modelName__"/>
                    <field name="state">code</field>
                    <field name="code">model.cron_sample_method()</field>
                    <field name="interval_type">days</field>
                    <field name="interval_number">1</field>
                </record>
            </data>
        </odoo>
      ir_sequence_data.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <data noupdate="1">
                <record id="__modelName___sequence" model="ir.sequence">
                    <field name="name">__modelName__ Sequence</field>
                    <field name="code">__modelTechnicalName__</field>
                    <field name="prefix">SAMPLE-</field>
                    <field name="padding">5</field>
                    <field name="number_next">1</field>
                    <field name="implementation">no_gap</field>
                </record>
            </data>
        </odoo>
    demo:
      __modelName___data.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <data noupdate="1">
                <record id="__modelName___demo_data_1" model="__modelTechnicalName__">
                    <field name="state">draft</field>
                    <field name="description">Demo Description</field>
                    <field name="partner_id" ref="base.res_partner_1"/>
                    <field name="amount">100</field>
                </record>
                <record id="__modelName___demo_data_2" model="__modelTechnicalName__">
                    <field name="state">confirmed</field>
                    <field name="description">Demo Description</field>
                    <field name="partner_id" ref="base.res_partner_2"/>
                    <field name="amount">200</field>
                </record>
                <record id="__modelName___demo_data_3" model="__modelTechnicalName__">
                    <field name="state">confirmed</field>
                    <field name="description">Demo Description</field>
                    <field name="partner_id" ref="base.res_partner_3"/>
                    <field name="amount">10</field>
                </record>
            </data>
        </odoo>
    models:
      __init__.py: |
        # -*- coding: utf-8 -*-

        from . import __modelName__

      __modelName__.py: |
        # -*- coding: utf-8 -*-

        from odoo  import api, fields, models, _

        class __modelClassName__(models.Model):
            _name = '__modelTechnicalName__'
            _description = 'Sample Model'
            _inherit = ['mail.thread']

            name = fields.Char(string="Name", default=lambda self: _('New'), readonly=True, copy=False,)
            state = fields.Selection([
                ('draft', 'Draft'),
                ('confirmed', 'Confirmed'),
                ('done', 'Done')
            ], default='draft', string="State")
            description = fields.Text(string="Description")
            amount = fields.Float(string="Amount")
            active = fields.Boolean(default=True)
            date = fields.Date(string="Date", default=fields.Date.context_today)
            company_id = fields.Many2one(comodel_name='res.company', string='Company',
                                         default=lambda self: self.env.company)
            partner_id = fields.Many2one(comodel_name='res.partner', string='Partner', required=True)
            user_id = fields.Many2one(
                comodel_name='res.users',
                string='User',
                default=lambda self: self.env.user,
            )


            @api.model_create_multi
            def create(self, vals):
                """Create records using provided values."""
                res = super().create(vals)
                return res
        
            def write(self, vals):
                """Write records using provided values."""
                res = super().write(vals)
                return res
        
            def unlink(self):
                """Delete records"""
                return super().unlink()

            def action_do_something(self):
                # Placeholder for button action
                pass

            def cron_sample_method(self):
                # Placeholder for scheduled action
                pass
    views:
      __modelName___views.xml: |
        <?xml version="1.0" encoding="utf-8"?>
        <odoo>
            <!-- Sample form view -->
            <record id="__modelName___views_form" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.form</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <form string="Form">
                        <header>
                            <button name="action_do_something" type="object" string="Do Something" class="oe_highlight"/>
                            <field name="state" widget="statusbar"/>
                        </header>
                        <sheet>
                            <div class="oe_title">
                                <label for="name"/>
                                <h1>
                                    <field name="name"/>
                                </h1>
                            </div>
                            <group>
                                <group>
                                    <field name="partner_id"/>
                                    <field name="amount"/>
                                    <field name="date"/>
                                </group>
                                <group>
                                    <field name="company_id"/>
                                    <field name="description"/>
                                </group>
        
                                <field name="active" invisible="1"/>
                            </group>
                        </sheet>
                         <chatter/>
                    </form>
        
                </field>
            </record>
            <!-- Sample list view -->
            <record id="__modelName___list" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.list</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <list>
                        <field name="name"/>
                        <field name="state"/>
                        <field name="amount"/>
                        <field name="date"/>
                    </list>
                </field>
            </record>
            <!-- Kanban View -->
            <record id="__modelName___kanban" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.kanban</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <kanban>
                        <field name="name"/>
                        <templates>
                            <t t-name="kanban-box">
                                <div class="oe_kanban_global_click">
                                    <strong><field name="name"/></strong><br/>
                                    <field name="state"/>
                                </div>
                            </t>
                        </templates>
                    </kanban>
                </field>
            </record>
             <!-- Calendar view -->
            <record id="__modelName___calendar_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.calendar</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <calendar string="__formalModuleName__ Calendar" date_start="date" date_stop="date">
                        <field name="name"/>
                        <field name="state"/>
                    </calendar>
                </field>
            </record>

            <!-- Pivot view -->
            <record id="__modelName___pivot_view" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.pivot</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <pivot string="__formalModuleName__ Pivot">
                        <field name="name"/>
                        <field name="state"/>
                    </pivot>
                </field>
            </record>
            <!-- Search View -->
            <record id="__modelName___search" model="ir.ui.view">
                <field name="name">__modelTechnicalName__.search</field>
                <field name="model">__modelTechnicalName__</field>
                <field name="arch" type="xml">
                    <search>
                        <field name="name"/>
                        <filter string="Draft" name="filter_draft" domain="[('state','=','draft')]"/>
                        <filter string="Confirmed" name="filter_confirmed" domain="[('state','=','confirmed')]"/>
                        <filter string="Done" name="filter_done" domain="[('state','=','done')]"/>
                    </search>
                </field>
            </record>
            <!-- Action -->
            <record id="action___modelName__" model="ir.actions.act_window">
                <field name="name">Samples</field>
                <field name="res_model">__modelTechnicalName__</field>
                <field name="view_mode">list,form,kanban,calendar,pivot</field>
            </record>
            <record id="ir_actions_client" model="ir.actions.client">
                <field name="name">Client Action</field>
                <field name="tag">__modelName__.__modelName__</field>
            </record>

            <menuitem id="menu___moduleName___root" name="__formalModuleName__" action="ir_actions_client"/>
    
            <!-- Menu -->
            <menuitem id="menu___moduleName___root" name="__formalModuleName__"/>
            <menuitem id="menu___moduleName___main" name="Records" parent="menu___moduleName___root" action="action___modelName__"/>
        </odoo>
    static:
      src:
        js:
          client_action.js: |
            /** @odoo-module */
            import { registry } from '@web/core/registry';
            import { Component, onWillStart, useState, onMounted, useEffect } from "@odoo/owl";
            import { useService } from "@web/core/utils/hooks";
            import { rpc } from "@web/core/network/rpc";

            export class __modelClassName__ extends Component {
                setup() {
                    this.orm = useService("orm");
                    this.state = useState({
                        records: [],
                        selectedRecord: null,
                        date: false,
                        chartType: null,
                        viewType: null,
                    });
                    onWillStart(this.onWillStart);
                    onMounted(this._renderGraph);
                    useEffect(() => {
                        this._renderGraph()
                    }, () => [this.state.date, this.state.chartType])
                }
                async onWillStart() {
                    this.state.records = await this.orm.searchRead(
                        "__modelTechnicalName__",
                        ['|', ['active', '=', true], ['active', '=', false]],
                        ['name', 'state', 'description', 'active', 'date', 'amount', 'company_id', 'user_id']
                    );
                    const savedRecordId = localStorage.getItem("__modelName___selected_record");
                    if (savedRecordId) {
                        const savedId = parseInt(savedRecordId, 10);
                        this.state.selectedRecord = this.state.records.find(record => record.id === savedId) || null;
                    }
                }

                async _renderGraph() {
                        var response = await rpc('/apply/filter',  {
                        'date': this.state.date,
                    })
                    if (this.state.chartType == 'pie_chart') {
                        google.charts.load('current', {'packages':['corechart']});
                        google.charts.setOnLoadCallback(drawChart);
                        function drawChart() {
                            var chartData = [['Partner', 'Name']];
                            response.forEach(function(item) {
                                chartData.push([item.partner, item.total_records]);
                            });
                            var data = google.visualization.arrayToDataTable(chartData);
                            var options = {
                            title: 'Pie Chart',
                            sliceVisibilityThreshold: 0,
                            pieSliceText: 'value',
                            pieSliceTextStyle: {
                                color: 'black',
                            },
                            };
                            var chart = new google.visualization.PieChart(document.getElementById('piechart'));
                            chart.draw(data, options);
                        }
                    } else if (this.state.chartType == 'donut_chart') {
                        google.charts.load('current', {'packages':['corechart']});
                        google.charts.setOnLoadCallback(drawChart);
                        function drawChart() {
                            var chartData = [['Partner', 'Name']];
                            response.forEach(function(item) {
                                chartData.push([item.partner, item.total_records]);
                            });
                            var data = google.visualization.arrayToDataTable(chartData);
                            var options = {
                            title: 'Donut Chart',
                            sliceVisibilityThreshold: 0,
                            pieHole: 0.4,
                            pieSliceText: 'value',
                            pieSliceTextStyle: {
                                color: 'black',
                            },
                            };
                            var chart = new google.visualization.PieChart(document.getElementById('piechart'));
                            chart.draw(data, options);
                        }
                    } else if (this.state.chartType == 'curved_chart') {
                        google.charts.load('current', {'packages':['corechart']});
                        google.charts.setOnLoadCallback(drawChart);
                        function drawChart() {
                            var chartData = [['Partner', 'Total Amount', 'Total Count']];
                            response.forEach(function(item) {
                                chartData.push([item.partner, item.total_amount, item.total_records]);
                            });
                            var data = google.visualization.arrayToDataTable(chartData);
                            var options = {
                                title: 'Line Chart',
                                curveType: 'function',
                                legend: { position: 'bottom' }
                            };
                            var chart = new google.visualization.LineChart(document.getElementById('piechart'));
                            chart.draw(data, options);
                        }
                    } else if (this.state.chartType == 'line_chart') {
                        google.charts.load('current', {'packages':['corechart']});
                        google.charts.setOnLoadCallback(drawChart);

                        function drawChart() {

                            var chartData = [['Partner', 'Total Amount', 'Total Count']];
                            response.forEach(function(item) {
                                chartData.push([item.partner, item.total_amount, item.total_records]);
                            });
                            var data = google.visualization.arrayToDataTable(chartData);
                            var options = {
                                title: 'Line Chart',
                                legend: { position: 'bottom' }
                            };

                            var chart = new google.visualization.LineChart(document.getElementById('piechart'));
                            chart.draw(data, options);
                        }
                    }
                }

                onSelectRecord(event) {
                    this.state.viewType = 'record_table'
                    this.state.chartType = null
                    const selectedId = event.target.value ? parseInt(event.target.value, 10) : null;
                    this.state.selectedRecord = this.state.records.find(record => record.id === selectedId) || null;
                    localStorage.setItem("__modelName___ref_selected_record", selectedId || "");
                }
                onSelectChart(event) {
                    this.state.viewType = 'graph_view'
                    this.state.chartType = event.target.value
                }
            }
            __modelClassName__.template = "__modelName__.__modelClassName__";
            registry.category("actions").add("__modelName__.__modelName__", __modelClassName__);
        xml:
          client_action.xml: |
            <?xml version="1.0" encoding="UTF-8"?>
                <templates xml:space="preserve">
                    <t t-name="__modelName__.__modelClassName__">
                        <style>
                            /* Base Styles */
                            .card {
                                border-radius: 15px;
                                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08);
                                transition: all 0.3s ease;
                                border: none;
                                overflow: hidden;
                            }

                            .card-header {
                                background-image: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
                                border-bottom: none;
                                padding: 1.2rem;
                            }

                            .card-body {
                                padding: 1.5rem;
                            }

                            /* Header Section */
                            .header-section {
                                background: linear-gradient(120deg, #f8f9fa 0%, #e9ecef 100%);
                                border-radius: 15px;
                                padding: 2.5rem;
                                margin-bottom: 2.5rem;
                                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
                                position: relative;
                                overflow: hidden;
                            }

                            .header-section::before {
                                content: "";
                                position: absolute;
                                top: -50px;
                                right: -50px;
                                width: 100px;
                                height: 100px;
                                border-radius: 50%;
                                background: rgba(78, 115, 223, 0.1);
                            }

                            .header-section::after {
                                content: "";
                                position: absolute;
                                bottom: -60px;
                                left: -60px;
                                width: 120px;
                                height: 120px;
                                border-radius: 50%;
                                background: rgba(78, 115, 223, 0.08);
                            }

                            .page-title {
                                font-weight: 800;
                                letter-spacing: -0.5px;
                                position: relative;
                                display: inline-block;
                                color: #4e73df !important;
                                margin-bottom: 0.5rem;
                            }

                            .page-title::after {
                                content: "";
                                position: absolute;
                                bottom: -8px;
                                left: 50%;
                                transform: translateX(-50%);
                                width: 80px;
                                height: 4px;
                                background: linear-gradient(90deg, #4e73df, #36b9cc);
                                border-radius: 2px;
                            }

                            /* Table Styles */
                            .table-container {
                                border-radius: 10px;
                                overflow: hidden;
                                margin-top: 0.5rem;
                            }

                            .table {
                                margin-bottom: 0;
                            }

                            .table thead th {
                                background-color: #f8f9fc;
                                border-top: none;
                                font-weight: 600;
                                letter-spacing: 0.5px;
                                text-transform: uppercase;
                                font-size: 0.85rem;
                                color: #4e73df;
                                padding: 1rem;
                            }

                            .table tbody tr:hover {
                                background-color: rgba(78, 115, 223, 0.05);
                            }

                            .table tbody th {
                                font-weight: 600;
                            }

                            /* Form Elements */
                            .select-container {
                                position: relative;
                                margin-bottom: 1rem;
                            }

                            .select-container::after {
                                content: '107';
                                font-family: 'Font Awesome 6 Free';
                                font-weight: 900;
                                position: absolute;
                                right: 15px;
                                top: 70%;
                                transform: translateY(-50%);
                                pointer-events: none;
                                color: #4e73df;
                            }

                            .form-select {
                                padding: 0.75rem 1rem;
                                border-radius: 10px;
                                border: 1px solid #e3e6f0;
                                background-color: #ffffff;
                                font-weight: 500;
                                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.03);
                                transition: all 0.2s ease;
                            }

                            .form-select:focus {
                                border-color: #bac8f3;
                                box-shadow: 0 0 0 0.25rem rgba(78, 115, 223, 0.15);
                            }

                            /* Badge  Button Styles */
                            .badge {
                                padding: 0.5rem 0.8rem;
                                font-weight: 600;
                                letter-spacing: 0.5px;
                            }

                            /* Text Elements */
                            .record-value {
                                font-weight: 500;
                                color: #28a745 !important;
                            }

                            .text-muted {
                                color: #858796 !important;
                            }

                            .lead {
                                font-weight: 400;
                            }

                            /* Animation  Effects */
                            .animated-item {
                                animation: fadeInUp 0.6s ease-out forwards;
                            }

                            @keyframes fadeInUp {
                                from {
                                    opacity: 0;
                                    transform: translateY(20px);
                                }
                                to {
                                    opacity: 1;
                                    transform: translateY(0);
                                }
                            }

                            /* Empty State */
                            .empty-state-icon {
                                font-size: 4rem;
                                color: #d1d3e2;
                                margin-bottom: 1.5rem;
                            }

                            /* Card Footer */
                            .card-footer {
                                background-color: #f8f9fc;
                                border-top: 1px solid #e3e6f0;
                                padding: 1rem 1.5rem;
                            }

                            /* Custom scrollbar */
                            .o_action_manager {
                                overflow-y: scroll !important;
                                scrollbar-width: thin;
                                scrollbar-color: #4e73df #f8f9fc;
                            }

                            .o_action_manager::-webkit-scrollbar {
                                width: 8px;
                            }

                            .o_action_manager::-webkit-scrollbar-track {
                                background: #f8f9fc;
                            }

                            .o_action_manager::-webkit-scrollbar-thumb {
                                background-color: #4e73df;
                                border-radius: 6px;
                                border: 3px solid #f8f9fc;
                            }

                            /* Hover Effects */
                            .card:hover {
                                transform: translateY(-3px);
                                box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
                            }
                        </style>
                        <div class="container py-5">
                            <!-- Header Section -->
                            <div class="header-section text-center animated-item">
                                <h1 class="page-title display-4">Welcome Dashboard</h1>
                            </div>

                            <!-- Content Section -->
                            <div class="row">
                                <!-- Selection Card -->
                                <div class="col-md-4 mb-4">
                                    <div class="card h-100 animated-item">
                                        <div class="card-header">
                                            <h5 class="card-title mb-0 text-white d-flex align-items-center">
                                                <i class="fa fa-list-ul me-2"/>
                                                <span>Operations</span>
                                            </h5>
                                        </div>
                                        <div class="card-body">
                                            <form>
                                                <div class="form-group select-container">
                                                    <label for="model-records" class="form-label fw-bold mb-2">Choose from available records:</label>
                                                    <select class="form-select" id="model-records"
                                                            t-on-change="onSelectRecord">
                                                        <option value="" selected="">Select an option</option>
                                                        <t t-foreach="state.records" t-as="record"
                                                        t-key="record.id">
                                                            <option t-att-value="record.id"
                                                                    t-att-selected="record.id === state.selectedRecord?.id">
                                                                <t t-esc="record.name"/>
                                                            </option>
                                                        </t>
                                                    </select>
                                                </div>
                                            </form>
                                            <p class="text-muted small mt-3 fst-italic">
                                                <i class="fa fa-info-circle me-1"/>
                                                Select a record to view its complete details
                                            </p>
                                        </div>
                                        <div class="card-body">
                                            <form>
                                                <div class="form-group select-container">
                                                    <label for="model-records" class="form-label fw-bold mb-2">Graphical Representation:</label>
                                                    <select class="form-select" id="model-graph"
                                                            t-on-change="onSelectChart">
                                                        <option selected="">Select an option</option>
                                                        <option value="pie_chart">Pie chart</option>
                                                        <option value="line_chart">Line chart</option>
                                                        <option value="curved_chart">Curved chart</option>
                                                        <option value="donut_chart">Donut chart</option>
                                                    </select>
                                                </div>
                                            </form>
                                            <p class="text-muted small mt-3 fst-italic">
                                                <i class="fa fa-info-circle me-1"/>
                                                Select an option to view the graphical representation
                                            </p>
                                        </div>
                                    </div>
                                </div>

                                <!-- Details Card -->
                                <div class="col-md-8">
                                    <t t-if="state.viewType == 'record_table'">
                                        <t t-if="state.selectedRecord">
                                            <div class="card animated-item">
                                                <div class="card-header d-flex justify-content-between align-items-center">
                                                    <h5 class="card-title mb-0 text-white d-flex align-items-center">
                                                        <i class="fa fa-info-circle me-2"/>
                                                        <span>Architecture</span>
                                                    </h5>
                                                </div>
                                                <div class="card-body">
                                                    <div class="table-container">
                                                        <table class="table table-striped table-hover">
                                                            <thead>
                                                                <tr>
                                                                    <th scope="col">Field</th>
                                                                    <th scope="col">Value</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <t t-foreach="Object.entries(state.selectedRecord)" t-as="entry" t-key="entry[0]">
                                                                    <tr>
                                                                        <th scope="row">
                                                                            <i class="fa fa-circle-dot me-2 text-primary"/>
                                                                            <span t-esc="entry[0]"/>
                                                                        </th>
                                                                        <td>
                                                                            <span class="record-value" t-esc="entry[1]"/>
                                                                        </td>
                                                                    </tr>
                                                                </t>
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </t>
                                        <t t-else="">
                                            <div class="card h-100 animated-item">
                                                <div class="card-body d-flex flex-column justify-content-center align-items-center text-center p-5">
                                                    <i class="fa fa-hand-point-left empty-state-icon"/>
                                                    <h4 class="mt-2 mb-3 text-primary">No Record Selected</h4>
                                                    <p class="text-muted mb-0">Please select a record from the list to view its details</p>
                                                </div>
                                            </div>
                                        </t>
                                    </t>
                                    <t t-elif="state.viewType == 'graph_view'">
                                        <div class="card h-100 animated-item">
                                            <input class="form-control" t-model="state.date" type="date" style="background-color: white" placeholder="Choose a date"/>
                                            <div id="piechart" style="width: 900px; height: 500px;"/>
                                        </div>
                                    </t>
                                    <t t-else="">

                                    </t>
                                </div>
                            </div>
                        </div>
                    </t>
                </templates>
    security:
      ir.model.access.csv: |
        id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
        access___modelName___user,access.__modelTechnicalName__.user,model___modelName__,base.group_user,1,1,1,1
StrayIconModule:
  __moduleName__:
    __init__.py: |
      # -*- coding: utf-8 -*-

    __manifest__.py: |
      # -*- coding: utf-8 -*-
      {
        "name": "__formalModuleName__",
        "version": "18.0.1.0.0",
        "category": "Tools",
        'summary': 'Brief description of the module',
        'description': '''
            Detailed description of the module
        ''',
        'author': 'Cybrosys Techno Solutions',
        'company': 'Cybrosys Techno Solutions',
        'maintainer': 'Cybrosys Techno Solutions',
        'website': 'https://www.cybrosys.com',
        "depends": ["base", "web"],
        "data": [],
        "assets": {
            'web.assets_backend': [
                '__moduleName__/static/src/js/systray.js',
                '__moduleName__/static/src/xml/systray_templates.xml',
            ]
        },
        "license": "LGPL-3",
        "installable": True,
        "auto_install": False,
        "application": True
      }
    static:
      src:
        js:
          systray.js: |
            /** @odoo-module **/
  
            import { registry } from "@web/core/registry";
            import { useService } from "@web/core/utils/hooks";
            import { Component } from "@odoo/owl";
            
            class __modelClassName__ extends Component {
                setup() {
                super.setup();
                this.notification = useService("notification");
                }
                
                showNotification() {
                    this.notification.add("Hello! This is a notification", {
                        title: "Systray Notification",
                        type: "info",
                        sticky: false,
                    });
                }
            }
            
            __modelClassName__.template = "__moduleName__";
  
            export const systrayItem = {
                Component: __modelClassName__,
            };
            
            registry.category("systray").add("SystrayIcon", systrayItem, { sequence: 1 });

        xml:
          systray_templates.xml: |
            <?xml version="1.0" encoding="UTF-8" ?>
  
            <templates xml:space="preserve">
                <t t-name="__moduleName__" owl="1">
                    <div class="d-flex align-items-center px-2">
                        <i class="fa fa-bell bg-white text-primary rounded-circle p-1"
                           style="font-size: 16px; cursor: pointer;"
                           title="Notifications"
                           t-on-click="showNotification" />
                    </div>
                </t>
            </templates>
